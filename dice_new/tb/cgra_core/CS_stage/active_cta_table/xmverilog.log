xmverilog(64): 22.09-s001: (c) Copyright 1995-2022 Cadence Design Systems, Inc.
TOOL:	xmverilog	22.09-s001: Started on Jul 17, 2025 at 11:21:15 PDT
xmverilog
	-f filelist.f
		../../../../cgra_core/cta_schedule/active_cta_table.sv
		./tb_active_cta_table.sv
	-sv
	-64bit
	+access+rcw
	-top
	tb_active_cta_table
	-stop_on_build_error
	-timescale
	1ns/1ps
file: ../../../../cgra_core/cta_schedule/active_cta_table.sv
	module worklib.active_cta_table:sv
		errors: 0, warnings: 0
file: ./tb_active_cta_table.sv
	module worklib.tb_active_cta_table:sv
		errors: 0, warnings: 0
	Elaborating the design hierarchy:
		Caching library 'worklib' ....... Done
xmelab: *W,DSEMEL: This SystemVerilog design will be simulated as per IEEE 1800-2009 SystemVerilog simulation semantics. Use -disable_sem2009 option for turning off SV 2009 simulation semantics.
	Building instance overlay tables: .................... Done
	Generating native compiled code:
		worklib.active_cta_table:sv <0x74e32041>
			streams:  86, words: 85705
		worklib.tb_active_cta_table:sv <0x18a401a1>
			streams:  51, words: 87818
	Building instance specific data structures.
	Loading native compiled code:     .................... Done
	Design hierarchy summary:
		                 Instances  Unique
		Modules:                 2       2
		Registers:              95      95
		Scalar wires:           14       -
		Vectored wires:         55       -
		Always blocks:           5       5
		Initial blocks:          5       5
		Parallel blocks:         1       1
		Cont. assignments:       9      10
		Pseudo assignments:     38      38
		Simulation timescale:  1ps
	Writing initial simulation snapshot: worklib.tb_active_cta_table:sv
Loading snapshot worklib.tb_active_cta_table:sv .................... Done
xmsim: *W,DSEM2009: This SystemVerilog design is simulated as per IEEE 1800-2009 SystemVerilog simulation semantics. Use -disable_sem2009 option for turning off SV 2009 simulation semantics.
xcelium> source /data/eda_tools/cadence/XCELIUM2209/tools/xcelium/files/xmsimrc
xcelium> run
=== Active CTA Table Testbench Started ===
Time=9000: full=0, next_empty=0, out_valid=0, add_ready=1, cta_valid=0000
Time=11000: full=0, next_empty=0, out_valid=0, add_ready=1, cta_valid=0000

--- Test 1: Reset State ---
✓ Reset state correct

--- Test 2: Add Single CTA ---
Time=14000: full=0, next_empty=0, out_valid=0, add_ready=1, cta_valid=0000
Time=16000: full=0, next_empty=0, out_valid=0, add_ready=1, cta_valid=0000
CTA Table: Allocated CTA(1,0,0) with 256 threads to entries 0-0 (THREAD_WIDTH=256)
Added CTA 0: ID=(1,0,0) Size=256 Kernel=a001
Time=19000: full=0, next_empty=1, out_valid=0, add_ready=1, cta_valid=0001
✓ Single CTA add successful - cta_valid=0001

--- Test 3: Pop Single CTA ---
Time=21000: full=0, next_empty=1, out_valid=0, add_ready=1, cta_valid=0001
Time=24000: full=0, next_empty=1, out_valid=0, add_ready=1, cta_valid=0001
CTA Table: Popping CTA(1,0,0) from entry 0, clearing 1 entries
✓ OUTPUT MATCH: ID=(1,0,0) Size=256 Kernel=a001
Popped CTA 0

--- Test 4: Fill Table Completely with Single Entries ---
Time=26000: full=0, next_empty=0, out_valid=1, add_ready=1, cta_valid=0000
Time=29000: full=0, next_empty=0, out_valid=0, add_ready=1, cta_valid=0000
CTA Table: Allocated CTA(1,0,0) with 256 threads to entries 0-0 (THREAD_WIDTH=256)
Added CTA 0: ID=(1,0,0) Size=256 Kernel=a001
Time=31000: full=0, next_empty=1, out_valid=0, add_ready=1, cta_valid=0001
Time=34000: full=0, next_empty=1, out_valid=0, add_ready=1, cta_valid=0001
CTA Table: Allocated CTA(2,0,0) with 256 threads to entries 1-1 (THREAD_WIDTH=256)
Added CTA 1: ID=(2,0,0) Size=256 Kernel=a002
Time=36000: full=0, next_empty=2, out_valid=0, add_ready=1, cta_valid=0011
Time=39000: full=0, next_empty=2, out_valid=0, add_ready=1, cta_valid=0011
CTA Table: Allocated CTA(3,0,0) with 256 threads to entries 2-2 (THREAD_WIDTH=256)
Added CTA 2: ID=(3,0,0) Size=256 Kernel=a003
Time=41000: full=0, next_empty=3, out_valid=0, add_ready=1, cta_valid=0111
Time=44000: full=0, next_empty=3, out_valid=0, add_ready=1, cta_valid=0111
CTA Table: Allocated CTA(4,0,0) with 256 threads to entries 3-3 (THREAD_WIDTH=256)
Added CTA 3: ID=(4,0,0) Size=256 Kernel=a004
Time=46000: full=1, next_empty=0, out_valid=0, add_ready=0, cta_valid=1111
✓ Table full correctly - cta_valid=1111

--- Test 5: Add When Full ---
Time=49000: full=1, next_empty=0, out_valid=0, add_ready=0, cta_valid=1111
Time=51000: full=1, next_empty=0, out_valid=0, add_ready=0, cta_valid=1111
✓ Correctly rejected add when full

--- Test 6: Pop All Entries ---
Time=54000: full=1, next_empty=0, out_valid=0, add_ready=0, cta_valid=1111
Time=56000: full=1, next_empty=0, out_valid=0, add_ready=0, cta_valid=1111
CTA Table: Popping CTA(1,0,0) from entry 0, clearing 1 entries
✓ OUTPUT MATCH: ID=(1,0,0) Size=256 Kernel=a001
Popped CTA 0
Time=59000: full=0, next_empty=0, out_valid=1, add_ready=1, cta_valid=1110
Time=61000: full=0, next_empty=0, out_valid=0, add_ready=1, cta_valid=1110
CTA Table: Popping CTA(2,0,0) from entry 1, clearing 1 entries
✓ OUTPUT MATCH: ID=(2,0,0) Size=256 Kernel=a002
Popped CTA 1
Time=64000: full=0, next_empty=0, out_valid=1, add_ready=1, cta_valid=1100
Time=66000: full=0, next_empty=0, out_valid=0, add_ready=1, cta_valid=1100
CTA Table: Popping CTA(3,0,0) from entry 2, clearing 1 entries
✓ OUTPUT MATCH: ID=(3,0,0) Size=256 Kernel=a003
Popped CTA 2
Time=69000: full=0, next_empty=0, out_valid=1, add_ready=1, cta_valid=1000
Time=71000: full=0, next_empty=0, out_valid=0, add_ready=1, cta_valid=1000
CTA Table: Popping CTA(4,0,0) from entry 3, clearing 1 entries
✓ OUTPUT MATCH: ID=(4,0,0) Size=256 Kernel=a004
Popped CTA 3

--- Test 7: Empty State ---
Time=74000: full=0, next_empty=0, out_valid=1, add_ready=1, cta_valid=0000
✓ Empty state correct - cta_valid=0000

--- Test 8: Add Multi-Entry CTA ---
Time=76000: full=0, next_empty=0, out_valid=0, add_ready=1, cta_valid=0000
Time=79000: full=0, next_empty=0, out_valid=0, add_ready=1, cta_valid=0000
CTA Table: Allocated CTA(5,0,0) with 512 threads to entries 0-1 (THREAD_WIDTH=256)
Added CTA 4: ID=(5,0,0) Size=512 Kernel=a005
Time=81000: full=0, next_empty=2, out_valid=0, add_ready=1, cta_valid=0001
✓ Multi-entry CTA add successful - cta_valid=0001 next_empty=2
Time=84000: full=0, next_empty=2, out_valid=0, add_ready=1, cta_valid=0001
Time=86000: full=0, next_empty=2, out_valid=0, add_ready=1, cta_valid=0001
CTA Table: Allocated CTA(1,0,0) with 256 threads to entries 2-2 (THREAD_WIDTH=256)
Added CTA 0: ID=(1,0,0) Size=256 Kernel=a001
Time=89000: full=0, next_empty=3, out_valid=0, add_ready=1, cta_valid=0101
✓ Added single after multi - cta_valid=0101
Time=91000: full=0, next_empty=3, out_valid=0, add_ready=1, cta_valid=0101
Time=94000: full=0, next_empty=3, out_valid=0, add_ready=1, cta_valid=0101
CTA Table: Popping CTA(5,0,0) from entry 0, clearing 2 entries
✓ OUTPUT MATCH: ID=(5,0,0) Size=512 Kernel=a005
Popped CTA 0
Time=96000: full=0, next_empty=0, out_valid=1, add_ready=1, cta_valid=0100
✓ After pop multi - cta_valid=0100 next_empty=0
Time=99000: full=0, next_empty=0, out_valid=0, add_ready=1, cta_valid=0100
Time=101000: full=0, next_empty=0, out_valid=0, add_ready=1, cta_valid=0100
CTA Table: Popping CTA(1,0,0) from entry 2, clearing 1 entries
✓ OUTPUT MATCH: ID=(1,0,0) Size=256 Kernel=a001
Popped CTA 2

--- Test 9: Rapid Add/Pop Sequence ---
Time=104000: full=0, next_empty=0, out_valid=1, add_ready=1, cta_valid=0000
Time=106000: full=0, next_empty=0, out_valid=0, add_ready=1, cta_valid=0000
CTA Table: Allocated CTA(1,0,0) with 256 threads to entries 0-0 (THREAD_WIDTH=256)
Added CTA 0: ID=(1,0,0) Size=256 Kernel=a001
Time=109000: full=0, next_empty=1, out_valid=0, add_ready=1, cta_valid=0001
CTA Table: Popping CTA(1,0,0) from entry 0, clearing 1 entries
✓ OUTPUT MATCH: ID=(1,0,0) Size=256 Kernel=a001
Popped CTA 0
Time=111000: full=0, next_empty=0, out_valid=1, add_ready=1, cta_valid=0000
CTA Table: Allocated CTA(2,0,0) with 256 threads to entries 0-0 (THREAD_WIDTH=256)
Added CTA 1: ID=(2,0,0) Size=256 Kernel=a002
Time=114000: full=0, next_empty=1, out_valid=0, add_ready=1, cta_valid=0001
CTA Table: Popping CTA(2,0,0) from entry 0, clearing 1 entries
✓ OUTPUT MATCH: ID=(2,0,0) Size=256 Kernel=a002
Popped CTA 0

--- Test 10: Output Buffer Backpressure ---
Time=116000: full=0, next_empty=0, out_valid=1, add_ready=1, cta_valid=0000
Time=119000: full=0, next_empty=0, out_valid=0, add_ready=1, cta_valid=0000
CTA Table: Allocated CTA(1,0,0) with 256 threads to entries 0-0 (THREAD_WIDTH=256)
Added CTA 0: ID=(1,0,0) Size=256 Kernel=a001
Time=121000: full=0, next_empty=1, out_valid=0, add_ready=1, cta_valid=0001
Time=124000: full=0, next_empty=1, out_valid=0, add_ready=1, cta_valid=0001
Time=126000: full=0, next_empty=1, out_valid=0, add_ready=1, cta_valid=0001
CTA Table: Popping CTA(1,0,0) from entry 0, clearing 1 entries
Popped CTA 0
Time=129000: full=0, next_empty=0, out_valid=1, add_ready=1, cta_valid=0000
Time=131000: full=0, next_empty=0, out_valid=1, add_ready=1, cta_valid=0000
Time=134000: full=0, next_empty=0, out_valid=1, add_ready=1, cta_valid=0000
CTA Table: Allocated CTA(2,0,0) with 256 threads to entries 0-0 (THREAD_WIDTH=256)
Added CTA 1: ID=(2,0,0) Size=256 Kernel=a002
Time=136000: full=0, next_empty=1, out_valid=1, add_ready=1, cta_valid=0001
Time=139000: full=0, next_empty=1, out_valid=1, add_ready=1, cta_valid=0001
CTA Table: Popping CTA(2,0,0) from entry 0, clearing 1 entries
Popped CTA 0
Time=141000: full=0, next_empty=1, out_valid=1, add_ready=1, cta_valid=0001
✓ Output buffer holding first CTA
Time=144000: full=0, next_empty=1, out_valid=1, add_ready=1, cta_valid=0001
Time=146000: full=0, next_empty=1, out_valid=1, add_ready=1, cta_valid=0001
Time=149000: full=0, next_empty=1, out_valid=0, add_ready=1, cta_valid=0001
Time=151000: full=0, next_empty=1, out_valid=0, add_ready=1, cta_valid=0001
Time=154000: full=0, next_empty=1, out_valid=0, add_ready=1, cta_valid=0001
CTA Table: Popping CTA(2,0,0) from entry 0, clearing 1 entries
✓ OUTPUT MATCH: ID=(2,0,0) Size=256 Kernel=a002
Popped CTA 0

=== Test Summary ===
Total Tests: 19
Passed: 19
Failed: 0
🎉 ALL TESTS PASSED!
Simulation complete via $finish(1) at time 155 NS + 0
./tb_active_cta_table.sv:463         $finish;
xcelium> exit
TOOL:	xmverilog	22.09-s001: Exiting on Jul 17, 2025 at 11:21:17 PDT  (total: 00:00:02)
